<!DOCTYPE html>
<html class="no-js" lang="zxx">
    <% include ./partials/head.ejs %>
    <body>
        <div class="wrapper">
            <% include ./partials/navbar.ejs %>
            <div class="login-register-area ptb-130">
                <div class="container">
                    <div class="row">
                        <div id="main-container" class="col-lg-7 ml-auto mr-auto">
                            <div class="login-register-wrapper">
                                <div class="login-register-tab-list nav">
                                    <a class="active" data-toggle="tab" href="#lg1">
                                        <h4>Account</h4>
                                    </a>
                                    <a data-toggle="tab" href="#lg2">
                                        <h4>Address</h4>
                                    </a>
                                    <a data-toggle="tab" href="#lg3">
                                        <h4>Password</h4>
                                    </a>
                                </div>
                                <div class="tab-content">
                                    <div id="lg1" class="tab-pane active">
                                        <div class="login-form-container">
                                            <div class="login-form">
                                                <form id="account-form">
                                                    <input type="text" placeholder="First Name" name="firstname" />
                                                    <input type="text" placeholder="Last Name" name="lastname" />
                                                    <input type="text" placeholder="Email" name="email" />
                                                    <input type="text" placeholder="Contact # (ex. 09356558374)" name="contactNo" />

                                                    <div class="button-box text-center">
                                                        <button type="button" id="update-account-btn" class="btn-style cr-btn mt-3">
                                                            <span>Update</span>
                                                        </button>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="lg2" class="tab-pane">
                                        <div class="login-form-container">
                                            <div class="login-form">
                                                <form id="address-form">
                                                    <div id="address-list">
                                                        <!-- <input type="text" placeholder="Building/House no., Street" name="street" />
                                                    <select name="province"> </select>
                                                    <select name="city"> </select>

                                                    <hr />
                                                    <input type="text" placeholder="Building/House no., Street" name="street" />
                                                    <select name="province"> </select>
                                                    <select name="city"> </select> -->
                                                    </div>

                                                    <div class="button-box text-center">
                                                        <button type="button" id="update-address-btn" class="btn-style cr-btn mt-3">
                                                            <span>Update</span>
                                                        </button>

                                                        <button type="button" id="add-address-modal-btn" class="btn-style cr-btn mt-3">
                                                            <span>Add Address</span>
                                                        </button>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="lg3" class="tab-pane">
                                        <div class="login-form-container">
                                            <div class="login-form">
                                                <form id="password-form">
                                                    <input type="password" placeholder="Current Password" name="oldPassword" />
                                                    <input type="password" placeholder="New Password" name="password" />
                                                    <input type="password" placeholder="Re-Type Password" name="password2" />

                                                    <div class="button-box text-center">
                                                        <button type="button" id="update-password-btn" class="btn-style cr-btn mt-3">
                                                            <span>Change Password</span>
                                                        </button>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Add New Address</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="login-form-container" style="box-shadow: none; padding: 0;">
                                <div class="login-form">
                                    <form id="add-address-form">
                                        <input type="text" placeholder="Address Description (ex. Home, Office)" name="description" />
                                        <input type="text" placeholder="Building/House no., Street" name="street" />
                                        <select name="province">
                                            <option selected disabled> - Select Province - </option>
                                        </select>
                                        <select name="city">
                                            <option selected> - Select City - </option>
                                        </select>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="add-address-btn" class="btn btn-warning">Add Address</button>
                        </div>
                    </div>
                </div>
            </div>

            <% include ./partials/footer.ejs %>
        </div>

        <% include ./partials/script.ejs %>
        <script src="../../ecommerce/js/address.js"></script>

        <script>
            loadingDialog.open();

            $(document).ready(function() {
                const state = {
                    customer: {},
                    customerId: JSON.parse(localStorage.getItem('account'))._id
                };

                getCustomer();
                addAddressSelect();

                async function getCustomer() {
                    try {
                        const customer = await $.get({ url: `/api/customer/${state.customerId}` });

                        state.customer = customer;

                        accountValues();
                        addressValues();
                    } catch (error) {
                        console.log(error);
                        if (error.responseText) return errorDialog(error.responseText);
                        else return errorDialog('Something went wrong.');
                    } finally {
                        loadingDialogClose();
                    }
                }

                async function updateCustomerAccount(customer) {
                    loadingDialog.open();

                    try {
                        const result = await $.ajax({ method: 'PUT', url: `/api/customer/${state.customerId}`, data: JSON.stringify(customer), contentType: 'application/json' });

                        state.customer = result;
                        updateAccountLocalStorage(result);
                        successDialog('Account Successfully Updated');
                        accountValues();
                    } catch (error) {
                        console.log(error);
                        if (error.responseText) return errorDialog(error.responseText);
                        else return errorDialog('Something went wrong.');
                    } finally {
                        loadingDialogClose();
                    }
                }

                async function updateCustomerAddress(customer) {
                    customer = { address: customer };
                    loadingDialog.open();

                    try {
                        const result = await $.ajax({ method: 'PUT', url: `/api/customer/${state.customerId}`, data: JSON.stringify(customer), contentType: 'application/json' });

                        state.customer.address = result.address;
                        updateAccountLocalStorage(result);
                        successDialog('Address Successfully Updated');
                        addressValues();
                    } catch (error) {
                        console.log(error);
                        if (error.responseText) return errorDialog(error.responseText);
                        else return errorDialog('Something went wrong.');
                    } finally {
                        loadingDialogClose();
                        $('#addAddressModal').modal('hide');
                    }
                }

                function updateAccountLocalStorage(account) {
                    localStorage.setItem('account', JSON.stringify(account));
                }

                // Profile
                $('body').on('click', '#update-account-btn', function() {
                    let account = $('#account-form').serializeObject();

                    if (!account.firstname.trim()) return warningDialog('First Name is required.');
                    if (!account.lastname.trim()) return warningDialog('Last Name is required.');
                    if (!account.email.trim()) return warningDialog('Email is required.');
                    if (!isValidEmail(account.email)) return warningDialog('Invalid Email.');
                    if (!account.contactNo.trim()) return warningDialog('Contact No. is required.');
                    if (/^\d{10}$/.test(account.contactNo)) return warningDialog('Invalid Contact No.');

                    updateCustomerAccount(account);
                });

                // Address
                $('body').on('click', '#add-address-modal-btn', function() {
                    const count = state.customer.address.length;

                    if (count >= 3) return warningDialog('Maximum of 3 address only.');

                    $('#addAddressModal').modal();
                    $('#add-address-form [name="description"]').val('');
                    $('#add-address-form [name="street"]').val('');
                    $('#add-address-form select[name="province"]')
                        .val('Laguna')
                        .attr('disabled', true);
                    // .prop('selectedIndex', 0);

                    $('#add-address-form select[name="city"]')
                        .empty()
                        .append(`<option selected disabled> - Select City - </option>${provincesAndCities['Laguna'].map(province => `<option value="${province}">${province}</option>`)}`)
                        .val('Cabuyao');
                });

                // $('body').on('change', '#addAddressModal select[name="province"]', function() {
                //     const province = $(this).val();
                //     const cities = provincesAndCities[province];

                //     $('#addAddressModal select[name="city"]')
                //         .empty()
                //         .append(`<option selected disabled> - Select City - </option>${provincesAndCities[province].map(province => `<option value="${province}">${province}</option>`)}`);
                // });

                $('body').on('click', '#add-address-btn', function() {
                    let address = $('#add-address-form').serializeObject();

                    if (!address.description.trim()) return warningDialog('Address Description is required.');
                    if (!address.street.trim()) return warningDialog('Building/House no., Street is required.');
                    // if (!address.province) return warningDialog('Province is required.');
                    // if (!address.city) return warningDialog('City is required.');
                    address.province = 'Laguna';
                    address.city = 'Cabuyao';

                    const newAddress = [...state.customer.address, address];
                    updateCustomerAddress(newAddress);
                });

                $('body').on('click', '.delete-address-btn', function() {
                    const count = state.customer.address.length - 1;

                    if (count === 0) return warningDialog('Cannot delete this address. There should be atleast one address.');

                    const id = $(this).attr('data-id');

                    const customer = state.customer.address.find(a => a._id === id);
                    const { description, street, city, province } = customer;

                    const address = `${description}: ${street}, ${city}, ${province}`;

                    if (confirm(`Are you sure you want to delete this address?\n${address}`)) {
                        const newAddress = state.customer.address.filter(a => a._id !== id);

                        updateCustomerAddress(newAddress);
                    }
                });

                $('body').on('click', '#update-address-btn', function() {
                    let newAddress = [];
                    let isValid = true;

                    $('.address-item').each(function(index) {
                        const address = {
                            _id: $(this)
                                .find('button.delete-address-btn')
                                .attr('data-id'),
                            description: $(this)
                                .find('input[name="description"]')
                                .val(),
                            street: $(this)
                                .find('input[name="street"]')
                                .val(),
                            // province: $(this)
                            //     .find('select[name="province"]')
                            //     .val(),
                            // city: $(this)
                            //     .find('select[name="city"]')
                            //     .val()
                            province: 'Laguna',
                            city: 'Cabuyao'
                        };

                        if (!address.description.trim()) {
                            isValid = false;
                            warningDialog('Address Description is required.');
                            return false;
                        }
                        if (!address.street.trim()) {
                            isValid = false;
                            warningDialog('Building/House no., Street is required.');
                            return false;
                        }
                        if (!address.province) {
                            isValid = false;
                            warningDialog('Province is required.');
                            return false;
                        }
                        if (!address.city) {
                            isValid = false;
                            warningDialog('City is required.');
                            return false;
                        }

                        newAddress.push(address);
                    });

                    if (!isValid) return;

                    updateCustomerAddress(newAddress);
                });

                // Password
                $('body').on('click', '#update-password-btn', function() {
                    let pass = $('#password-form').serializeObject();
                    const { oldPassword, password, password2 } = pass;

                    if (!oldPassword) return warningDialog('Please enter Current Password.');
                    if (!password) return warningDialog('Please enter New Password.');
                    if (password.length < 8) return warningDialog('Password should be above 8 characters.');
                    if (!password2) return warningDialog('Please Re-type New Password.');
                    if (password !== password2) return warningDialog('Password not match.');

                    if (oldPassword !== JSON.parse(localStorage.getItem('account')).password) return warningDialog('Current Password Incorrect.');

                    updateCustomerAccount({ password });
                    $('#password-form input').val('');
                });

                function accountValues() {
                    const { firstname, lastname, email, contactNo } = state.customer;
                    $('input[name="firstname"]').val(firstname);
                    $('input[name="lastname"]').val(lastname);
                    $('input[name="email"]').val(email);
                    $('input[name="contactNo"]').val(contactNo);
                }

                function addressValues() {
                    const { address } = state.customer;

                    $('#address-list').empty();

                    address.forEach((a, index) => {
                        const { _id, description, street, province, city } = a;

                        $('#address-list').append(`<div class="address-item" style="position: relative">
                            <button type="button" class="btn btn-danger rounded-circle px-2 delete-address-btn" data-id="${_id}" style="position: absolute; top: -40px; right: -40px;"><i class="fa fa-trash" aria-hidden="true"></i></button>
                            <input type="text" placeholder="Description" name="description" value="${description}" />
                            <input type="text" placeholder="Building/House no., Street" name="street" value="${street}" />
                            <select name="province" value=""><option selected disabled> - Select Province - </option>${Object.keys(provincesAndCities).map(province => `<option value="${province}">${province}</option>`)}</select>
                            <select name="city"><option selected disabled> - Select City - </option>${provincesAndCities[province].map(province => `<option value="${province}">${province}</option>`)}</select>
                        </div>`);

                        $(`.address-item:eq(${index}) select[name="province"]`)
                            .val(province)
                            .attr('disabled', true);
                        $(`.address-item:eq(${index}) select[name="city"]`).val(city);

                        $(`.address-item:eq(${index}) select[name="province"]`).on('change', function() {
                            const province = $(this).val();
                            const cities = provincesAndCities[province];

                            $(`.address-item:eq(${index}) select[name="city"]`)
                                .empty()
                                .append(`<option selected disabled> - Select City - </option>${provincesAndCities[province].map(province => `<option value="${province}">${province}</option>`)}`);
                        });

                        if (address.length - 1 !== index) $('#address-list').append('<hr />');
                        // {
                        //     "_id": "5dfa1dd7e038942530037381",
                        //     "description": "Default",
                        //     "street": "Lakesidenest",
                        //     "province": "Laguna",
                        //     "city": "Cabuyao"
                        // }
                    });
                }

                function addAddressSelect() {
                    $('#addAddressModal select[name="province"]').append(Object.keys(provincesAndCities).map(province => `<option value="${province}">${province}</option>`));
                }
            });
        </script>
    </body>
</html>
