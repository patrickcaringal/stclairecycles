<!DOCTYPE html>
<html class="no-js" lang="zxx">
    <% include ./partials/head.ejs %>
    <body>
        <div class="wrapper">
            <% include ./partials/navbar.ejs %>
            <div class="shop-wrapper fluid-padding-2 pt-120 pb-150">
                <div class="container-fluid mt-5">
                    <input type="hidden" id="isLoggedIn" value="<%= locals.isLoggedIn %>" />
                    <input type="text" id="refresh-page" value="no" class="d-none" />

                    <div class="row">
                        <div class="col-lg-2">
                            <input class="form-control form-control-sm" id="filter-table" type="text" placeholder="Search" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-12">
                            <table id="order-table" class="table table-bordered animated fadeIn" style="width: 100%;"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <% include ./partials/script.ejs %>
        <script>
            loadingDialog.open();

            $(document).ready(function() {
                const state = {
                    orders: [],
                    table: {}
                };

                getOrders();

                async function getOrders() {
                    try {
                        const orders = await $.get({ url: `/api/order/customer/${JSON.parse(localStorage.getItem('account'))._id}` });
                        state.orders = orders;
                        // console.log(JSON.stringify(orders, '', 4));
                        loadtable();
                    } catch (error) {
                        console.log(error);
                        if (error.responseText) return errorDialog(error.responseText);
                        else return errorDialog('Something went wrong.');
                    } finally {
                        loadingDialogClose();
                    }
                }

                function loadtable() {
                    $.fn.dataTable.moment('YYYY-MMM-DD hh:ss A');
                    state.table = $('#order-table').DataTable({
                        destroy: true,
                        data: state.orders,
                        dom: 'rtip',
                        order: [[2, 'desc']],
                        scrollX: true,
                        columns: [
                            //
                            { data: 'orderNo', title: '#' },
                            { data: 'orderCount', title: 'Items', className: 'dt-center' },
                            { data: 'dateCreated', title: 'Date Ordered', render: (data, type, row, meta) => (data ? moment(data).format('YYYY-MMM-DD hh:ss A') : '<span class="text-danger font-weight-bolder">X</span>') },
                            { data: 'total', title: 'Total Price', render: (data, type, row, meta) => ` â‚±${numWithCommas(data.toFixed(2))}` },
                            // { data: 'card', title: 'Payment Type', render: (data, type, row, meta) => (data == 'Visa' ? `<i class="fa fa-cc-visa mr-2" aria-hidden="true"></i> ****${row.last4}` : `Others ****${row.last4}`) },
                            {
                                data: 'status',
                                title: 'Status',
                                render: (data, type, row, meta) => {
                                    if (data === 'succeeded') return 'To Ship';
                                    else if (data === 'shipping') return 'To Receive ';
                                    else if (data === 'delivered') return 'Delivered ';
                                }
                            },

                            {
                                data: null,
                                title: 'Action',
                                orderable: false,
                                width: 100,
                                className: 'text-center',
                                render: (data, type, row, meta) => {
                                    let code = `<button class="btn btn-sm btn-info p-2 order-detail-btn" type="button" aria-pressed="true" data-orderId="${row._id}"><i class="fa fa-th-list" aria-hidden="true"></i></button>`;
                                    if (row.orders.find(i => !i.hasRating)) code += `<button class="btn btn-sm btn-info p-2 ml-2 rate-btn" type="button" aria-pressed="true" data-orderId="${row._id}"><i class="fa fa-comments" aria-hidden="true"></i></button>`;

                                    return code;
                                }
                            }
                        ],

                        columnDefs: [
                            {
                                targets: '_all',
                                render: (data, type, row, meta) => data || '<span class="text-danger font-weight-bolder">X</span>'
                            }
                        ],

                        rowCallback: (row, data, iDataIndex) => {
                            $(row).attr('id', data._id);
                        }
                    });
                }

                $('body').on('keyup', '#filter-table', function() {
                    state.table.search($(this).val()).draw();
                });

                $('body').on('click', '.order-detail-btn', function(event) {
                    event.stopPropagation();
                    const id = $(this).attr('data-orderId');

                    window.location.href = `order?id=${id}`;
                });

                $('body').on('click', '.rate-btn', function(event) {
                    event.stopPropagation();
                    const id = $(this).attr('data-orderId');

                    window.location.href = `rate?id=${id}`;
                });
            });
        </script>
    </body>
</html>
