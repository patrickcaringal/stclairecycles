<!-- all js here -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.isotope/3.0.5/isotope.pkgd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/4.1.4/imagesloaded.pkgd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Counter-Up/1.0.0/jquery.counterup.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/rateYo/2.3.2/jquery.rateyo.min.js"></script>

<!-- Datatable -->
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
<script src="https://cdn.datatables.net/plug-ins/1.10.19/sorting/datetime-moment.js"></script>

<script src="../../ecommerce/js/waypoints.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.2.1/owl.carousel.min.js"></script>
<script src="../../ecommerce/js/plugins.js"></script>
<script src="../../ecommerce/js/main.js"></script>
<script>
    var refrehPage = $('#refresh-page');
    refrehPage.val() == 'yes' ? location.reload(true) : refrehPage.val('yes');

    // PAGE INIT
    createGlobalCart();

    $('body').on('click', '#logout-btn', async function() {
        try {
            const customerId = JSON.parse(localStorage.getItem('account'))._id;
            let cartProducts = JSON.parse(localStorage.getItem('cart'));
            cartProducts = cartProducts.map(i => ({ product: i._id, stock: i.stock, quantity: i.quantity }));

            const result = await $.ajax({ method: 'PUT', url: `/api/customer/${customerId}`, data: JSON.stringify({ cart: cartProducts }), contentType: 'application/json' });
        } catch (error) {
            console.log(error);
            if (error.responseText) return errorDialog(error.responseText);
            else return errorDialog('Something went wrong.');
        } finally {
            removeCookies();
            localStorage.removeItem('account');
            localStorage.removeItem('cart');
            window.location.href = 'shop';
        }
    });

    $('body').on('click', '#redirect-login-btn', function() {
        window.location.href = 'login';
    });

    $('body').on('click', '.remove-to-cart', function() {
        const cartProducts = JSON.parse(localStorage.getItem('cart'));
        const id = $(this).attr('data-id');

        const newCartProducts = cartProducts.filter(p => p._id !== id);
        localStorage.setItem('cart', JSON.stringify(newCartProducts));
        createGlobalCart();
    });

    function createGlobalCart() {
        let products = JSON.parse(localStorage.getItem('cart')) || [];

        if (products.length < 1) {
            $('.cart-blank').removeClass('d-none');
            $('.cart-not-blank').addClass('d-none');

            $('.shopping-cart-big').addClass('d-none');
            $('#purchase-btn').attr('disabled', true);
        } else {
            $('.cart-blank').addClass('d-none');
            $('.cart-not-blank').removeClass('d-none');

            $('.shopping-cart-big').removeClass('d-none');
            $('#purchase-btn').attr('disabled', false);
        }

        // products = products.length < 3 ? products :
        const productShow = products.length < 3 ? products : products.slice(0, 3);

        const cart = productShow.map(prod => {
            const { _id, title, price, quantity } = prod;

            return `<li class="single-shopping-cart">
                                <div class="shopping-cart-title" style="width: 80% !important;">
                                    <h3 class="text-truncate"><a href="#">${title}</a></h3>
                                    <span>Price: ₱${numWithCommas(price.toFixed(2))}</span>
                                    <span>Qty: ${quantity}</span>
                                </div>
                                <div class="shopping-cart-delete">
                                    <a href="#"><i class="icofont icofont-ui-delete remove-to-cart" data-id="${_id}"></i></a>
                                </div>
                            </li>`;
        });

        const totalAmount = products.reduce((total, i) => total + parseFloat(i.price) * parseFloat(i.quantity), 0);

        $('.global-cart')
            .empty()
            .html(cart);
        if (products.length > 3) {
            $('.global-cart').append(`<div class="shopping-cart-btn mb-3">
                            <a class="btn-style cr-btn checkout-order-btn" href="/checkout" style="margin-top: 0px;">see more ... </a>
                        </div>`);
        }

        $('.global-cart-counter').html(products.length);
        $('.global-cart-total').html(`₱${numWithCommas(totalAmount.toFixed(2))}`);
    }

    // UTILITY FUNCTIONS
    const loadingDialog = $.dialog({
        title: 'Loading',
        content: 'Please wait ...',
        lazyOpen: true,
        theme: 'modern',

        closeIcon: false,
        animationSpeed: 200,
        columnClass: 'small',
        icon: 'fa fa-spinner fa-spin'
    });

    function loadingDialogClose() {
        setTimeout(() => {
            loadingDialog.close();
        }, 500);
    }

    function successDialog(content) {
        const load = $.dialog({
            title: 'Success',
            content,
            theme: 'modern',
            type: 'green',
            lazyOpen: true,

            closeIcon: true,
            animationSpeed: 200,
            columnClass: 'small',
            icon: 'fa fa-check-circle'
        });

        load.open();

        setTimeout(() => {
            load.close();
        }, 750);
    }

    function errorDialog(content) {
        $.dialog({
            title: 'Error',
            content,
            theme: 'modern',
            type: 'red',

            closeIcon: true,
            animationSpeed: 200,
            columnClass: 'small',
            icon: 'fa fa-times-circle'
        });
    }

    function warningDialog(content) {
        const load = $.dialog({
            title: 'Warning',
            content,
            theme: 'modern',
            type: 'orange',
            lazyOpen: true,

            closeIcon: true,
            animationSpeed: 200,
            columnClass: 'small',
            icon: 'fa fa-exclamation-circle'
        });

        load.open();

        setTimeout(() => {
            load.close();
        }, 750);
    }

    function disableButton(button) {
        $(button).attr('disabled', true);
        $(button).append(' <i class="fa fa-spinner fa-spin fa-fw"></i>');
    }

    function enableButton(button) {
        $(button).attr('disabled', false);
        $(button)
            .find('i')
            .remove();
    }

    $.fn.serializeObject = function() {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function() {
            if (o[this.name]) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };

    function isValidEmail(email) {
        var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(String(email).toLowerCase());
    }

    function numWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
    }

    function removeCookies() {
        document.cookie = 'session =; expires = Thu, 01 Jan 1970 00:00:00 UTC';
        // var res = document.cookie;
        // var multiple = res.split(';');
        // for (var i = 0; i < multiple.length; i++) {
        //     var key = multiple[i].split('=');
        //     console.log(key);
        //     // document.cookie = key[0] + ' =; expires = Thu, 01 Jan 1970 00:00:00 UTC';
        // }
    }
</script>
